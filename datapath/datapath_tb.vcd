$date
	Mon Jun 09 20:18:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module datapath_tb $end
$var wire 32 ! resultado_ula [31:0] $end
$var wire 32 " pc_atual [31:0] $end
$var wire 32 # instrucao [31:0] $end
$var wire 32 $ dado_reg2 [31:0] $end
$var wire 32 % dado_reg1 [31:0] $end
$var wire 32 & dado_memoria [31:0] $end
$var wire 32 ' dado_escrita [31:0] $end
$var reg 1 ( clk $end
$var reg 1 ) reset $end
$var integer 32 * cycle [31:0] $end
$scope module dut $end
$var wire 1 + branch_taken $end
$var wire 1 ( clk $end
$var wire 32 , pc_atual [31:0] $end
$var wire 1 ) reset $end
$var wire 4 - ula_op [3:0] $end
$var wire 5 . rs2 [4:0] $end
$var wire 5 / rs1 [4:0] $end
$var wire 32 0 resultado_ula [31:0] $end
$var wire 5 1 rd [4:0] $end
$var wire 32 2 pc_plus4 [31:0] $end
$var wire 32 3 pc_next [31:0] $end
$var wire 32 4 pc_branch [31:0] $end
$var wire 32 5 operando_b [31:0] $end
$var wire 7 6 opcode [6:0] $end
$var wire 32 7 instrucao [31:0] $end
$var wire 32 8 immediate [31:0] $end
$var wire 7 9 funct7 [6:0] $end
$var wire 3 : funct3 [2:0] $end
$var wire 8 ; endereco_instr [7:0] $end
$var wire 32 < dado_reg2 [31:0] $end
$var wire 32 = dado_reg1 [31:0] $end
$var wire 32 > dado_memoria [31:0] $end
$var wire 32 ? dado_escrita [31:0] $end
$var wire 1 @ RegWrite $end
$var wire 1 A PCSrc $end
$var wire 1 B MemtoReg $end
$var wire 1 C MemWrite $end
$var wire 1 D MemRead $end
$var wire 1 E Branch $end
$var wire 1 F ALUSrc $end
$var wire 2 G ALUOp [1:0] $end
$var reg 32 H pc [31:0] $end
$scope module controle_ula $end
$var wire 3 I funct3 [2:0] $end
$var wire 7 J funct7 [6:0] $end
$var wire 2 K ALUOp [1:0] $end
$var reg 4 L ula_op [3:0] $end
$upscope $end
$scope module gen_imm $end
$var wire 7 M opcode [6:0] $end
$var wire 32 N instruction [31:0] $end
$var reg 32 O immediate [31:0] $end
$upscope $end
$scope module mem_data $end
$var wire 1 C wr $end
$var wire 32 P wd [31:0] $end
$var wire 32 Q rs [31:0] $end
$var reg 32 R rd [31:0] $end
$upscope $end
$scope module mem_instrucao $end
$var wire 8 S endereco [7:0] $end
$var reg 32 T dado [31:0] $end
$upscope $end
$scope module regs $end
$var wire 5 U rd [4:0] $end
$var wire 5 V rs1 [4:0] $end
$var wire 5 W rs2 [4:0] $end
$var wire 32 X write_data [31:0] $end
$var wire 1 @ wr $end
$var reg 32 Y read1 [31:0] $end
$var reg 32 Z read2 [31:0] $end
$upscope $end
$scope module ucont $end
$var wire 7 [ opcode [6:0] $end
$var reg 2 \ ALUOp [1:0] $end
$var reg 1 F ALUSrc $end
$var reg 1 E Branch $end
$var reg 1 D MemRead $end
$var reg 1 C MemWrite $end
$var reg 1 B MemtoReg $end
$var reg 1 A PCSrc $end
$var reg 1 @ RegWrite $end
$upscope $end
$scope module unidade_ula $end
$var wire 32 ] A [31:0] $end
$var wire 32 ^ B [31:0] $end
$var wire 4 _ UlaOp [0:3] $end
$var reg 32 ` Out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 `
b10 _
b0 ^
b0 ]
b0 \
b11 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b1 U
b10000010000011 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b10000010000011 N
b11 M
b10 L
b0 K
b0 J
b10 I
b0 H
b0 G
1F
0E
1D
0C
1B
0A
1@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b10 :
b0 9
b0 8
b10000010000011 7
b11 6
b0 5
b0 4
b100 3
b100 2
b1 1
b0 0
b0 /
b0 .
b10 -
b0 ,
0+
b0 *
1)
0(
b0 '
b0 &
b0 %
b0 $
b10000010000011 #
b0 "
b0 !
$end
#10000
b0 !
b0 0
b0 Q
b0 `
0B
0@
1C
0D
b0 5
b0 ^
b100011 M
b1 .
b1 W
b0 1
b0 U
b100011 6
b100011 [
b0 8
b0 O
b100000010000000100011 #
b100000010000000100011 7
b100000010000000100011 N
b100000010000000100011 T
b1 ;
b1 S
b1000 3
b1000 2
b100 4
b100 "
b100 ,
b100 H
b1 *
1(
0)
#20000
0(
#30000
b0 !
b0 0
b0 Q
b0 `
b10 G
b10 K
b10 \
1@
0C
0F
b0 5
b0 ^
b110011 M
b1 /
b1 V
b0 :
b0 I
b10 1
b10 U
b110011 6
b110011 [
b0 8
b0 O
b100001000000100110011 #
b100001000000100110011 7
b100001000000100110011 N
b100001000000100110011 T
b10 ;
b10 S
b1100 3
b1100 2
b1000 4
b1000 "
b1000 ,
b1000 H
b10 *
1(
#40000
0(
#50000
b110 -
b110 L
b110 _
1+
b100000000000 8
b100000000000 O
b1 G
b1 K
b1 \
1E
0@
1A
b1100011 M
b10 /
b10 V
b1 1
b1 U
b1100011 6
b1100011 [
b100010000000011100011 #
b100010000000011100011 7
b100010000000011100011 N
b100010000000011100011 T
b11 ;
b11 S
b100000001100 3
b10000 2
b100000001100 4
b1100 "
b1100 ,
b1100 H
b11 *
1(
#60000
0(
#70000
b1000000001100 3
b100000010000 2
b1000000001100 4
b100000001100 "
b100000001100 ,
b100000001100 H
b100 *
1(
#80000
0(
#90000
b1100000001100 3
b1000000010000 2
b1100000001100 4
b1000000001100 "
b1000000001100 ,
b1000000001100 H
b101 *
1(
#100000
0(
#110000
b10000000001100 3
b1100000010000 2
b10000000001100 4
b1100000001100 "
b1100000001100 ,
b1100000001100 H
b110 *
1(
#120000
0(
#130000
b10100000001100 3
b10000000010000 2
b10100000001100 4
b10000000001100 "
b10000000001100 ,
b10000000001100 H
b111 *
1(
#140000
0(
#150000
b11000000001100 3
b10100000010000 2
b11000000001100 4
b10100000001100 "
b10100000001100 ,
b10100000001100 H
b1000 *
1(
